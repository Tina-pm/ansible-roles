# vim:ts=2:sw=2:et:ai:sts=2
---
- name: sanity check
  ansible.builtin.fail:
    msg: Cannot remove the user running ansible ({{ ansible_user }})!
  when: >-
    ansible_user is defined and ansible_user in (users__remove_users | d([]))

- name: remove users
  ansible.builtin.include_tasks: remove_user.yaml
  loop: '{{ users__remove_users | d([]) }}'
  loop_control:
    loop_var: user_name

- name: remove groups
  ansible.builtin.group:
    state: absent
    name: '{{ item }}'
  loop: '{{ users__remove_groups | d([]) }}'

- name: create groups
  ansible.builtin.group:
    state: present
    name: '{{ item.name }}'
    system: '{{ item.system | d() | bool }}'
  loop: '{{ users__create_groups | d([]) }}'

- name: create users
  ansible.builtin.include_tasks: user.yaml
  vars:
    user:
      system: '{{ _user.system | d() | bool }}'
      name: '{{ _user.name }}'
      gecos: '{{ _user.gecos | d(_user.name) }}'
      password: '{{ _user.password | d("*") }}'
      groups: '{{ _user.groups | default([]) | join(",") }}'
      append: '{{ _user.append | d() | bool }}'
      home: '{{ _user.home
        | d("/" if _user.get("system") else "/home/" ~ _user.name) }}'
      create_home: '{{ _user.create_home | d(True) | bool }}'
      move_home: '{{ _user.move_home | d(not _user.get("system")) | bool }}'
      shell: '{{ _user.shell
        | d("/bin/false" if _user.get("system") else "/bin/bash") }}'
      generate_ssh_key: '{{ _user.generate_ssh_key | d() | bool }}'
      update_password: '{{
        "always" if users__force_update_password else (
          _user.update_password | d("on_create")
        ) }}'
      forward: '{{ _user.forward | d("") }}'
      authorized: '{{ _user.authorized | d([]) }}'
  loop: '{{ users__create_users | d([]) }}'
  loop_control:
    loop_var: _user
  no_log: true

- name: set mail forwarding for root
  ansible.builtin.lineinfile:
    dest: /etc/aliases
    line: 'root: {{ users__root_mail_forward }}'
    regexp: '^root:.*'
    state: present
  when: >
    users__root_mail_forward is defined and users__root_mail_forward
  notify: users__run_newaliases
