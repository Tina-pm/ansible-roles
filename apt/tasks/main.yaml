# vim:ts=2:sw=2:et:ai:sts=2
---
- name: abort if distribution mismatch
  fail:
    msg: |
      distribution mismatch: {{ ansible_distribution_release }} !=
      {{ apt__distro }}. Set FORCE_APT_DIST_UPGRADE=1 to override.
  when:
    ansible_distribution_release != apt__distro and
    not lookup('env','FORCE_APT_DIST_UPGRADE')

- name: configure APT sources
  template:
    src: sources.list.j2
    dest: /etc/apt/sources.list
  register: _apt_sources

- name: configure custom APT sources
  template:
    src: sources.list.d.j2
    dest: '/etc/apt/sources.list.d/{{ item.key }}.list'
  loop: '{{ apt__custom_sources | d({}) | dict2items }}'
  when: item.value
  register: _apt_custom_sources

- name: delete custom APT sources
  file:
    path: '/etc/apt/sources.list.d/{{ item.key }}.list'
    state: absent
  loop: '{{ apt__custom_sources | d({}) | dict2items }}'
  when: not item.value
  register: _apt_custom_sources_rm

- name: configure custom APT trusted keys
  copy:
    dest: '/etc/apt/trusted.gpg.d/{{ item.key }}.gpg'
    content: '{{ item.value | b64decode }}'
    owner: root
    group: root
    mode: 0644
  loop: '{{ apt__trusted_keys | d({}) | dict2items }}'
  when: item.value
  register: _apt_trusted_keys

- name: delete custom APT trusted keys
  file:
    path: '/etc/apt/trusted.gpg.d/{{ item.key }}.gpg'
    state: absent
  loop: '{{ apt__trusted_keys | d({}) | dict2items }}'
  when: not item.value
  register: _apt_trusted_keys_rm

- name: configure custom APT preferences
  copy:
    dest: '/etc/apt/preferences.d/{{ item.key }}'
    content: '{{ item.value }}'
    owner: root
    group: root
    mode: 0644
  loop: '{{ apt__custom_preferences | d({}) | dict2items }}'
  when: item.value
  register: _apt_custom_preferences

- name: delete custom APT preferences
  file:
    path: '/etc/apt/preferences.d/{{ item.key }}'
    state: absent
  loop: '{{ apt__custom_preferences | d({}) | dict2items }}'
  when: not item.value
  register: _apt_custom_preferences_rm

- name: configure installation of recommended packages
  template:
    src: 02recommends.j2
    dest: /etc/apt/apt.conf.d/02recommends

- name: update package lists
  apt:
    update_cache: true
    cache_valid_time: '{{
      0 if (
        apt__force_run_update or _apt_sources.changed or
        _apt_custom_sources.changed or
        _apt_custom_sources_rm.changed or
        _apt_trusted_keys.changed or
        _apt_trusted_keys_rm.changed or
        _apt_custom_preferences.changed or
        _apt_custom_preferences_rm.changed
      ) else 3600 }}'

- name: update packages
  apt:
    upgrade: dist
    purge: '{{ apt__purge_removed }}'
  when: apt__run_upgrade

- name: remove unneeded packages
  apt:
    autoremove: true
    purge: '{{ apt__purge_removed }}'
  when: apt__run_autoremove

- name: install packages
  apt:
    name: '{{ apt__packages_to_install }}'
    state: latest

- name: enable services
  service:
    name: '{{ item }}'
    enabled: true
  loop: '{{ apt__services_to_enable or [] }}'

- name: start services
  service:
    name: '{{ item }}'
    state: started
  loop: '{{ apt__services_to_start or [] }}'
