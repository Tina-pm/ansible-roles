# vim:ts=2:sw=2:et:ai:sts=2
---

apt__distro: '{{ apt__default_distro }}'
apt__mirror: '{{ apt__default_mirror }}'
apt__components: '{{ apt__default_components }}'

apt__security_distro: '{{ apt__default_security_distro }}'
apt__security_mirror: '{{ apt__default_security_mirror }}'

apt__install_recommends: false

# Dict with custom sources.list.d files.
# Use an empty value to remove the source.
apt__custom_sources: {}
#  my_repo:
#    mirror: http://myhost/debian
#    distro: ./
#    components: main
#    options:
#      trusted: 'yes'
#    include_source: false
#  deleted: ~

# Dict with custom trusted keys (as strings containing GPG keyring contents) to
# add to trusted.gpg.d.
# Use an empty value to remove the trusted key file.
apt__trusted_keys: {}

# Dict with custom preferences (as strings containing the file contents) to add
# to preferences.d.
# Use an empty value to remove the preferences file.
apt__custom_preferences: {}

apt__packages_to_install: []
apt__services_to_enable: []
apt__services_to_start: []

# Run `apt update` even if cache is recent.
apt__force_run_update: false
# Run `apt dist-upgrade` if true.
apt__run_upgrade: false
# Run `apt autoremove` if true.
apt__run_autoremove: false
# Add `--purge` to apt invocations.
apt__purge_removed: false

# Use distro information to determine correct Python interpreter.
ansible_python_interpreter: |-
  {{ '/usr/bin/python3' if apt__python3_is_default else '/usr/bin/python' }}
