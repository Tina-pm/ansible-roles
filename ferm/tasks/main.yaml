# vim:ts=2:sw=2:et:ai:sts=2
---
- name: Preseed debconf
  ansible.builtin.debconf:
    name: ferm
    question: ferm/enable
    value: 'yes'
    vtype: boolean
  changed_when: false

- name: Install package
  ansible.builtin.apt:
    name: [ferm, libnet-dns-perl]
    state: present

- name: Find installed version  # noqa: risky-shell-pipe
  ansible.builtin.shell: >-
    /usr/sbin/ferm --version | sed -n 's/^ferm \([0-9].*\)/\1/p'
  register: ferm__version_check
  changed_when: false
  # Run normally even in check mode.
  check_mode: false

- name: Find installed version
  ansible.builtin.set_fact:
    ferm__version: '{{ ferm__version_check.stdout | d("0") }}'
  # Run normally even in check mode.
  check_mode: false

- name: Disable caching
  ansible.builtin.lineinfile:
    dest: /etc/default/ferm
    line: CACHE=no
    regexp: '^CACHE[ =]'
    state: present
  notify: _tina_reload_ferm

- name: Create ferm.d directory
  ansible.builtin.file:
    path: /etc/ferm/ferm.d
    state: directory
    owner: root
    group: adm
    mode: '02750'

- name: Place main config file
  ansible.builtin.template:
    src: ferm.conf.j2
    dest: /etc/ferm/ferm.conf
    owner: root
    group: adm
    mode: '0644'
  notify: _tina_reload_ferm

- name: Place service config files
  ansible.builtin.template:
    src: service.conf.j2
    dest: /etc/ferm/ferm.d/svc-{{ item.key }}.conf
    owner: root
    group: adm
    mode: '0644'
  notify: _tina_reload_ferm
  with_dict: '{{ ferm__services }}'

- name: Find obsolete service config files  # noqa: risky-shell-pipe
  ansible.builtin.shell: >-
    ls /etc/ferm/ferm.d/ |
    sed -n 's/^svc-\(.*\)\.conf$/\1/p'
  register: ferm__config_files
  changed_when: false
  check_mode: false

- name: Remove obsolete service config files
  ansible.builtin.file:
    path: /etc/ferm/ferm.d/svc-{{ item }}.conf
    state: absent
  with_items: '{{ ferm__config_files.stdout_lines }}'
  when: item not in ferm__services
  notify: _tina_reload_ferm

- name: Place custom config files
  ansible.builtin.copy:
    content: '{{ item.value }}'
    dest: /etc/ferm/ferm.d/custom-{{ item.key }}.conf
    owner: root
    group: adm
    mode: '0644'
  notify: _tina_reload_ferm
  with_dict: '{{ ferm__custom_configs }}'

- name: Find obsolete custom config files  # noqa: risky-shell-pipe
  ansible.builtin.shell: >-
    ls /etc/ferm/ferm.d/ |
    sed -n 's/^custom-\(.*\)\.conf$/\1/p'
  register: ferm__config_files
  changed_when: false
  check_mode: false

- name: Remove obsolete custom config files
  ansible.builtin.file:
    path: /etc/ferm/ferm.d/custom-{{ item }}.conf
    state: absent
  with_items: '{{ ferm__config_files.stdout_lines }}'
  when: item not in ferm__custom_configs
  notify: _tina_reload_ferm

- name: Place blacklist config file
  ansible.builtin.copy:
    dest: /etc/ferm/ferm.d/00-blacklist.conf
    owner: root
    group: adm
    mode: '0644'
    content: |
      domain (ip ip6) table filter chain blacklist
          saddr @ipfilter(({{ saddr }}))
          REJECT;
  notify: _tina_reload_ferm
  when: ferm__blacklist is defined and ferm__blacklist
  vars:
    saddr: >-
      {{ ferm__blacklist if ferm__blacklist is string else
        ferm__blacklist | join(' ') }}

- name: Start and enable service
  ansible.builtin.service:
    name: ferm
    state: started
    enabled: true
