# vim:ts=2:sw=2:et:ai:sts=2
---
- name: Install prometheus
  ansible.builtin.package:
    name: prometheus
    state: present

- name: Configure prometheus cmdline
  ansible.builtin.template:
    src: default.j2
    dest: /etc/default/prometheus
    owner: root
    group: root
    mode: '0644'
  notify: _tina_restart_prometheus

- name: Create rules directory
  ansible.builtin.file:
    path: /etc/prometheus/rules
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Install rules files
  ansible.builtin.copy:
    src: '{{ item }}'
    dest: /etc/prometheus/rules/{{ item | basename }}
    owner: root
    group: root
    mode: '0644'
    validate: /usr/bin/promtool check rules %s
  notify: _tina_reload_prometheus
  with_items: '{{ prometheus__rules }}'
  when: not item.endswith('.j2')

- name: Install rules templates
  ansible.builtin.template:
    src: '{{ item }}'
    dest: /etc/prometheus/rules/{{
      item | basename | regex_replace('\.j2$', '') }}
    # Avoid clashes with prometheus template language.
    variable_start_string: '{='
    # yamllint disable-line rule:quoted-strings
    variable_end_string: '=}'
    owner: root
    group: root
    mode: '0644'
    validate: /usr/bin/promtool check rules %s
  notify: _tina_reload_prometheus
  with_items: '{{ prometheus__rules }}'
  when: item.endswith('.j2')

- name: Configure prometheus
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    owner: root
    group: root
    mode: '0644'
    validate: /usr/bin/promtool check config %s
  notify: _tina_reload_prometheus

- name: Start and enable service
  ansible.builtin.service:
    name: prometheus
    state: started
    enabled: true

- name: Install ferm configuration
  ansible.builtin.template:
    src: ferm.conf.j2
    dest: /etc/ferm/ferm.d/prometheus.conf
    owner: root
    group: adm
    mode: '0644'
  notify: _tina_reload_ferm
  when: prometheus__install_ferm_svc | bool
